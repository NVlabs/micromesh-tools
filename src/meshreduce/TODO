performance improvements
------------------------
VFAdjacency 1) use std::vectors
            2) use encapsulated indexed buffers (a la vcglib, BETTER, FASTER, EASIER TO MERGE ON COLLAPSE)

- I/O functions should be consistent, and return success/error info
- FIX crash with Smithsonian model
- FIX color map when altering micromesh with color map enabled
- REFACTORING remove the stupid base_to_input stuff...
- REDUCE GPU USAGE

- Quando si fa il coarsening della microstruttura gli aggiustamenti del loop di regolazione dei salti di suddivisione sopravvive.
- Vedere perche' la proxy crea i t-vertici -> dipende dall'assenza di vertex smoothing :/
- recuperare la passata di flip dopo un collapse
  criterio per il flip: dato il quad intorno a un edge, se i vertici sono planari (volume del tetra / lato medio)
  AND il quadrilatero e' concavo THEN la diagonale del quad deve toccare il vertice concavo (flip se non e' vero)
  ipotesi: il vertex smoothing diventa inutile
  il test di planarita' evita di flippare i crease edges

 [X] Ottimizzazione dell'Henrificatore (evitare di rifare il raycasting)
 [X] Spostare i comandi GUI al posto giusto (Re-optimize micromesh)
 [X] Refactoring del codice

TODO
 [X] ripristinare il subdivision level nell'interfaccia (legarlo a microexpansion)?
 [X] iterare coarsen finche' non si ferma
 [ ]Remeshing:
   - Integrare il direction field quando si flippano gli edge
       IF piatto THEN [ IF concavo flip se l'edge splitta l'angolo max ELSE flip se AR migliora]
       ELSE [ IF direction field e' localmente significativo (ratio direction vector length to edge length (min before/after flip)) allora allineati al direction field ELSE AR decide]
 [ ] - Pre-filtering (quadric smoothing?)

[ ] Preparare per il prossimo meeting qualche tabella con esperimenti e performance !!! IMPORTANTE, GLIEL'HO PROMESSO L'ULTIMA VOLTA !!!!
[X] Misurare dove perde tempo nel loading della mesh, e se e' colpa del direction field toglierlo visto che tanto al momento non si usa
[ ] C'e' un baco sulla colorazione degli edge, che se faccio piu' volte la decimazione alcuni edge scompaiono (succede ad esempio con horse_section, con proxy)
[X] Usare il # di microfacce come criterio di suddivisione/coarsening
[ ] Valenze 3 vanno tolte (flip?)
[ ] Idea: la direzione di displacement giusta e' quella che, interpolata lungo gli edge, e' la bisettrice dell'angolo tra le 2 facce (diedrale)
[ ] Mettere una passata finale post-semplificazione in cui si flippano gli edge per allinearsi al direction field.
    Fatta alla maniera semplice: iterazione su tutte le facce/edge, e flip si/no (tipo remove near-degenerate triangles)
[ ] Ridurre il footprint delle quadriche (simmetria di A + Cramer's rule)
[ ] Parallel proxy decimation (controller tracks accesses and dispatches 'collapseable' edges)
[ ] Scalar everywhere! ci sono dei double sparsi per il progetto
[ ] quando si fa il parsing degli argomenti in session._execute_XXX(), usare funzioni getter (con range ecc...) invece dello stuolo di if che c'e' ora....

Si creano crack nel torus 4k con questi comandi
-----------------------------------------------

decimate -max_error 1 -min_aspect_ratio 0.4 -max_cone_angle 120 -min_fn 1 -vertex_smoothing 1
tessellate -target_microexpansion 2 -adaptive true
set_displacement_dirs -type normals
displace
minimize_prismoids
tweak_tessellation -base_fi 49 -delta 1
tweak_tessellation -base_fi 49 -delta 1
tweak_tessellation -base_fi 49 -delta 1
tweak_tessellation -base_fi 11 -delta -1
tweak_tessellation -base_fi 11 -delta -1
tweak_tessellation -base_fi 11 -delta -1
tweak_tessellation -base_fi 11 -delta -1
tweak_tessellation -base_fi 29 -delta -1
tweak_tessellation -base_fi 29 -delta 1
tweak_displacement_dir -base_vi 13 -direction 0.111991,-0.991128,0.0715736
tweak_tessellation -base_fi 23 -delta -1
tweak_tessellation -base_fi 23 -delta 1
tweak_tessellation -base_fi 23 -delta 1
tweak_tessellation -base_fi 25 -delta 1
tweak_tessellation -base_fi 23 -delta -1
tweak_tessellation -base_fi 25 -delta -1
tweak_tessellation -base_fi 23 -delta -1
tweak_tessellation -base_fi 23 -delta 1
tweak_tessellation -base_fi 23 -delta 1
tweak_tessellation -base_fi 25 -delta -1
tweak_tessellation -base_fi 23 -delta -1
tweak_tessellation -base_fi 23 -delta -1
tweak_tessellation -base_fi 23 -delta 1
tweak_tessellation -base_fi 23 -delta 1
tweak_tessellation -base_fi 23 -delta 1
tweak_tessellation -base_fi 23 -delta -1
tweak_tessellation -base_fi 25 -delta -1
reset_tessellation_offsets
tessellate -target_microexpansion 2 -adaptive true
displace
reset_tessellation_offsets
tessellate -target_microexpansion 2 -adaptive true
displace
tweak_displacement_dir -base_vi 13 -direction -0.0493571,-0.114729,0.99217
tweak_tessellation -base_fi 29 -delta -1
reset_tessellation_offsets
tessellate -target_microexpansion 2 -adaptive true
displace
tweak_displacement_dir -base_vi 13 -direction -0.00257988,-0.999629,-0.027107
tweak_tessellation -base_fi 23 -delta 1
tweak_tessellation -base_fi 23 -delta -1
tweak_tessellation -base_fi 23 -delta 1
tweak_tessellation -base_fi 23 -delta 1
tweak_tessellation -base_fi 23 -delta -1
reset_tessellation_offsets
tessellate -target_microexpansion 2 -adaptive true
displace
tweak_tessellation -base_fi 23 -delta -1
tweak_tessellation -base_fi 25 -delta -1
tweak_tessellation -base_fi 23 -delta -1
reset_tessellation_offsets
tessellate -target_microexpansion 2 -adaptive true
displace
tweak_tessellation -base_fi 23 -delta 1
tweak_tessellation -base_fi 23 -delta 1
tweak_tessellation -base_fi 23 -delta -1
reset_tessellation_offsets
tessellate -target_microexpansion 2 -adaptive true
displace
tweak_tessellation -base_fi 23 -delta 1
